% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Functions.R
\name{BVAR_conj_forecast}
\alias{BVAR_conj_forecast}
\title{Conjugate Normal Inverse Wishart BVAR Forecasting}
\usage{
BVAR_conj_forecast(model, src_series, Z_f = NULL, h = 1,
  out_of_sample = TRUE, type = c("prediction", "credible"), level = c(80,
  95), include = c("mean", "median", "sd", "interval", "raw"),
  fast_forecast = FALSE, verbose = FALSE)
}
\arguments{
\item{model}{A model estimated by \code{BVAR_cniw_est()} function.}

\item{src_series}{The source series used in estimation and forecasting. 
Required for forecasting.}

\item{Z_f}{Forecasted exogenous variables.}

\item{h}{Forecast horizon. Default is \code{1}.}

\item{out_of_sample}{Whether the forecast is done in-sample or out-of-sample. Default is \code{TRUE}.}

\item{type}{If set to \code{"prediction"} (default value), then uncertainty 
about future shocks is incorporated (by adding random errors). If set to \code{"credible"}, 
only parameter uncertainty is considered.}

\item{level}{Confidence levels for prediction intervals. Can be given as a vector.}

\item{include}{What type of descriptive statistics on raw forecast sample to include in the summary.
By default, mean, median, standard deviation, quantiles and raw data is included (the latter is suplied 
in a separate list element)}

\item{fast_forecast}{Default is \code{FALSE}. If \code{TRUE}, the MCMC forecasting is skipped and 
only posterior Phi matrix is used.}

\item{verbose}{Default is \code{FALSE}. If set to \code{TRUE} internal messages will be displayed.}
}
\value{
A list containing: a dataframe with summary, raw forecasts sample (if \code{raw} is in \code{include}).
}
\description{
Forecasts with CNIW BVAR. The function takes \code{BVAR_cniw_est()} result as model.
}
\details{
The functions uses MCMC approach for prediction and generates a large sample 
(depends on size of Phi draws in the estimated model). Mean, median, standard seviation and 
quantiles are supplied automatically. The computations are done in C++ (\code{bvar_fcst()} function).
The R function acts as a shell providing inputs and making a list of output dataframe and raw 
forecast table, if requested by the user.
}
\examples{
### Dummy Code: Do not run ###
data(series)
setupCpp <- BVAR_cniw_setup(train, lam = c(0.2, 1, 1, 1, 100, 100), p = 4, s2_lag = 4, v_prior = -1, delt = 1)
estCpp <- BVAR_cniw_est(setup = setupCpp, keep = 2000, verbose = TRUE, n_chains = 4)
fcast <- BVAR_conj_forecast(model = estCpp, src_series = train, h = nrow(test), out_of_sample = FALSE, 
                            level = c(80, 95), verbose = TRUE)
}
